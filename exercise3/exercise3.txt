# Jacob Murrah COMP-5700 Exercise 3
# NOTE: ALL output generated by Google Gemini

#############################################################
# Prompt 1: 
Generate 5 different threat models for an object-based storage device like minio.

################### Prompt 1 Output ###################
Here are five different threat models for an object-based storage device like MinIO, using the STRIDE framework (Spoofing, Tampering, Repudiation, Information Disclosure, Denial of Service, and Elevation of Privilege).
1. External Attacker Threat Model (STRIDE)
This model focuses on an external, unauthenticated attacker attempting to compromise the MinIO instance from outside the network. The goal is to gain access, manipulate data, or disrupt service.
    Spoofing: An attacker could try to spoof a legitimate user's credentials to gain unauthorized access to buckets and objects. This could be achieved through phishing, credential stuffing, or exploiting weak authentication mechanisms.
    Tampering: Once authenticated, or by exploiting a vulnerability, an attacker could upload malicious objects, modify existing data, or corrupt files, leading to data integrity loss.
    Repudiation: A malicious actor could perform an action (like deleting a bucket) and then deny they did it. Without proper audit logs or access tracking, it would be impossible to prove the origin of the action.
    Information Disclosure: An attacker could exploit an API vulnerability to list all buckets, even if they aren't public, or access the contents of a private object. This could also happen through a misconfigured bucket policy that makes sensitive data publicly readable.
    Denial of Service (DoS): The attacker could flood the MinIO server with a high volume of requests, consuming all available resources and making the service unavailable for legitimate users. Another tactic is to repeatedly upload large files until the storage runs out of space.
    Elevation of Privilege: A vulnerability in the MinIO API could allow an attacker with basic access to escalate their privileges to a root or admin user, giving them full control over the entire system.

2. Malicious Insider Threat Model (STRIDE)
This model focuses on a trusted individual with legitimate access to the MinIO system. This individual could be an employee, a contractor, or a service account that has been compromised. The attacker's goal is to misuse their authorized access for malicious purposes.
    Spoofing: An insider could use their existing privileges to impersonate another user or a service account with higher-level access to gain unauthorized permissions.
    Tampering: An employee with write access to a specific bucket could maliciously alter, delete, or inject data. For example, a disgruntled employee could corrupt critical backup files.
    Repudiation: An insider could perform malicious actions and then delete the corresponding audit logs or events, making it difficult to trace their activity and hold them accountable.
    Information Disclosure: An insider could exfiltrate sensitive data they have access to, such as customer records or proprietary business information, to a location outside the organization.
    Denial of Service (DoS): An insider could intentionally delete or corrupt large data sets or entire buckets, causing a severe service disruption for other users and applications.
    Elevation of Privilege: An insider with limited privileges could exploit a misconfiguration or a bug to gain more access than they are authorized for.

3. Misconfiguration & Human Error Threat Model
This model focuses on unintentional threats that arise from improper configuration or mistakes rather than malicious intent. This is one of the most common causes of data breaches in object storage.
    Threat: A MinIO administrator accidentally sets a bucket's policy to publicly readable or publicly writable.
    Impact: This exposes sensitive data to the internet or allows unauthorized users to upload malicious content. This can lead to massive data leaks and reputational damage.
    Threat: The access keys and secret keys for a MinIO user are stored in an unencrypted file or committed to a public code repository like GitHub.
    Impact: Anyone who finds the keys can gain full access to the associated user's buckets and data.
    Threat: The default MinIO credentials are not changed after installation.
    Impact: Attackers can easily gain administrator access using well-known default credentials.
    Threat: The server is not properly hardened, leaving unnecessary ports open or running an outdated version with known vulnerabilities.
    Impact: This gives an attacker a foothold to compromise the entire system and all stored data.

4. Supply Chain Threat Model
This model considers threats that originate from external software dependencies or the object storage device's own upstream components.
    Threat: A vulnerability is discovered in one of the open-source libraries that MinIO depends on.
    Impact: This vulnerability could be exploited to compromise the MinIO service, even if the MinIO code itself is secure. This can lead to remote code execution (RCE) or other severe attacks.
    Threat: The MinIO installer or official container image is compromised, and malicious code is injected before it reaches the end user.
    Impact: This "trojanized" version of MinIO could have a built-in backdoor, allowing the attacker to steal data or gain control of the system once it is deployed.

5. Application Integration Threat Model
This model focuses on the threats that arise from how other applications interact with MinIO.
    Threat: A web application using a MinIO bucket is vulnerable to a server-side request forgery (SSRF) attack.
    Impact: An attacker could use the SSRF vulnerability to force the web application to make requests to the MinIO API on their behalf, potentially bypassing network firewalls and other security controls.
    Threat: A client application has overly permissive credentials. For example, a mobile app is given read/write access to a bucket, but it only needs to read a few specific files.
    Impact: If the mobile app is compromised, an attacker can use its credentials to access, modify, and delete data they are not supposed to. This violates the principle of least privilege.
    Threat: A cloud-native application is using MinIO but does not properly validate the files it uploads.
    Impact: An attacker could upload a malicious file (e.g., an executable disguised as an image) that an internal service later tries to process. This could lead to a compromise of the processing service and potentially the entire network.
################### Prompt 1 Output End ###################

Deliverables provided by Prompt 1:
NOTE: ALL of the below deliverables are obtained by reading the prompt. The prompt does not explicitly provide any of this information.
- Threats: 
    * Spoofing
    * Tampering
    * Repudiation
    * Information Disclosure
    * Denial of Service (DoS)
    * Elevation of Privilege
    * Misconfiguration
    * Supply Chain Threats
    * Application Integration Threats
    * Arbitrary Code Execution / Remote Code Execution (RCE)
- Threat Events:
    * Exploitation of vulnerabilities to gain unauthorized code execution on MinIO servers.
    * The creation and use of a "trojanized" version of MinIO which contains a backdoor.
    * The attackers use the exploited vulnerabilities to obtain administrative credentials.
    * A user accidentally sets a bucket policy to be publicly readable or writable.
    * An attacker forcing a web application to make requests to the MinIO API on their behalf via an SSRF vulnerability.
    * A client application with overly broad permissions is compromised, allowing the attacker to perform unauthorized actions.
- Threat Actors:
    * External Attacker: An unauthenticated individual or group from outside the network.
    * Malicious Insider: A trusted individual with legitimate access to the system.
    * Unknown threat actor: The specific actor behind the exploitation.
- Rank of Identified Threats:
    1. External Attacker Threat
    2. Misconfiguration & Human Error Threat
    3. Application Integration Threat
    4. Malicious Insider Threat
    5. Supply Chain Threat


#############################################################
# Prompt 2: 
You are an expert cybersecurity analyst. Please generate a threat model for an object-based storage device, such as minio. 
Please explicitly report the threats, threat events, and threat actors in the threat model. Also, rank the threats.
################### Prompt 2 Output Start ###################
1. Threats, Threat Events, and Threat Actors
    A. Spoofing
        Threat Event: An attacker obtains a legitimate user's access keys (like MINIO_ACCESS_KEY and MINIO_SECRET_KEY) to impersonate them and access the storage. This can be done by exploiting a vulnerability that discloses credentials or by compromising a user's machine.
        Threat Actor:
            External Adversaries: Cybercriminals, state-sponsored attackers, or hacktivists aiming to exfiltrate data or disrupt services.
            Insider Threats: Disgruntled employees or former employees who have retained access credentials.
            Script Kiddies: Opportunistic attackers using publicly available exploits to gain unauthorized access.

    B. Tampering
        Threat Event: An unauthorized user modifies, deletes, or corrupts data objects in the storage device. This could be a ransomware attack that encrypts data or a malicious actor deleting critical backup files.
        Threat Actor:
            External Adversaries: Ransomware groups or cybercriminals seeking to extort money or cause business disruption.
            Insider Threats: Malicious employees or administrators aiming to sabotage the company.

    C. Repudiation
        Threat Event: A user performs a malicious action, such as deleting critical data, and then denies having done so. This is a risk if there are insufficient audit logs or if logs are not properly protected and can be tampered with.
        Threat Actor:
            Insider Threats: Malicious employees or administrators.
            External Adversaries: An attacker who has gained administrative privileges and is trying to cover their tracks by altering logs.

    D. Information Disclosure
        Threat Event:
            Unauthorized Data Access: An attacker reads sensitive data objects without proper authorization, which can lead to data breaches. This can occur due to misconfigured access control policies (e.g., public buckets) or by exploiting vulnerabilities.
            Credential Disclosure: The MinIO server exposes sensitive environment variables, such as MINIO_SECRET_KEY and MINIO_ROOT_PASSWORD, to an unauthorized user, allowing them to gain control over the system. This has been a known vulnerability in the past.
        Threat Actor:
            External Adversaries: Cybercriminals and spies seeking to exfiltrate sensitive data for financial gain or intelligence purposes.
            Insider Threats: An employee with access to the system but not the specific data who uses that access to view confidential information.
            Opportunistic Attackers: Attackers who scan the internet for misconfigured, publicly exposed MinIO instances.

    E. Denial of Service (DoS)
        Threat Event: An attacker overwhelms the MinIO server with a high volume of requests, consuming resources and making the service unavailable for legitimate users. This could be a distributed denial-of-service (DDoS) attack or a resource exhaustion attack.
        Threat Actor:
            External Adversaries: Hacktivists, cybercriminals, or competitors aiming to disrupt business operations.
            Insider Threats: Disgruntled employees trying to shut down services.

    F. Elevation of Privilege
        Threat Event: An attacker with limited user access gains administrative privileges, allowing them to bypass security controls, modify policies, and access sensitive data. This can occur by exploiting a software vulnerability or a misconfiguration.
        Threat Actor:
            External Adversaries: Advanced Persistent Threat (APT) groups and sophisticated cybercriminals who can chain vulnerabilities to escalate privileges.
            Insider Threats: Low-level employees attempting to gain greater access to data or system controls.

2. Threat Ranking
    Threats are ranked based on their potential impact and likelihood. A simple qualitative model is used here, with a higher number indicating a greater risk.
    1. Tampering (High Risk): The impact of data tampering or deletion is catastrophic, potentially leading to permanent data loss and significant business disruption. The likelihood is high, given the prevalence of ransomware attacks and malicious insider threats.
    2. Information Disclosure (High Risk): The compromise of sensitive data, such as customer information or intellectual property, can result in severe financial penalties, reputational damage, and legal consequences. The likelihood is high due to common misconfigurations and past vulnerabilities.
    3. Elevation of Privilege (High Risk): If an attacker can escalate their privileges, they can effectively take full control of the storage device, which enables all other threats, including data tampering, disclosure, and denial of service. The likelihood is moderate but the potential impact is extremely high.
    4. Spoofing (Medium-High Risk): While the impact of a single user's credentials being compromised can be limited, if the compromised user has high privileges, the risk becomes very high. The likelihood of credential theft is significant due to phishing and other social engineering attacks.
    5. Denial of Service (Medium Risk): A DoS attack can cause significant operational downtime and financial loss. However, its impact is often temporary and does not necessarily result in data loss or theft. The likelihood is moderate, as DoS attacks are common.
    6. Repudiation (Medium-Low Risk): The impact of repudiation is primarily related to accountability and forensic analysis after an incident. While it can hinder an investigation, it does not directly cause data loss or service unavailability. The likelihood is moderate, as it's a common tactic for attackers to hide their activities.
################### Prompt 2 Output End ###################

Deliverables provided by Prompt 2:
- Threats: 
    * Spoofing
    * Tampering
    * Repudiation
    * Information Disclosure
    * Denial of Service (DoS)
    * Elevation of Privilege
- Threat Events:
    * An attacker obtains a legitimate user's access keys to impersonate them and gain unauthorized access to the storage.
    * An unauthorized user modifies, deletes, or corrupts data objects on the storage device.
    * A user performs a malicious action and then denies doing so because audit logs are insufficient or have been tampered with.
    * An attacker reads sensitive data or obtains credentials without authorization due to misconfigurations or vulnerabilities.
    * An attacker overwhelms the server with a high volume of requests, making the service unavailable to legitimate users.
    * An attacker with limited access escalates their privileges to gain full administrative control of the system.
- Threat Actors:
    * External Attacker: An unauthenticated individual or group from outside the network.
    * Malicious Insider: A trusted individual with legitimate access to the system.
    * Unknown threat actor: The specific actor behind the exploitation.
    * Script Kiddies/Opportunistic Attackers: use publicly available exploits to gain unauthorized access.
- Rank of Identified Threats:
    1. Tampering
    2. Information Disclosure
    3. Elevation of Privilege
    4. Spoofing
    5. Denial of Service
    6. Repudiation


################### Conclusion ###################
The more detailed Prompt 2 explicitly provides the threats, events, actors, and ranking that is useful in modeling threats. 
The output provided by prompt 1 requires the reader to summarize and have existing knowledge of the threats in order to obtain 
a some of the information such as threat ranking.